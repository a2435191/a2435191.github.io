---
layout: post
title:  "Advent of Code 2022 Day 01: Calorie Counting"
date:   2022-12-01 20:54:43 -0600
categories: adventofcode22
---

# Introduction
I'm beginning a new series in which I solve Advent of Code programming challenge problems using the Python standard library. All code is available on [this page's repo](https://github.com/a2435191/a2435191.github.io).

Last year, I got through all but five or so of the problems in C#, and with a year of practice under my belt I would like to go for a perfect fifty stars.

# First problem
The [first problem](https://adventofcode.com/2022/day/1) for today is easy, as expected: given a newline-delimited file of integers (calories) split into blocks (elves) by double newlines, find the block (elf) with the greatest sum (total calories).


For organization (and maybe later automation), I define a common abstract base class for solving these problems.

```python
{% include aoc2022/BaseSolution.py %}
```

(I find the `autoDocstring` VS Code extension very helpful.)

```python
{% include aoc2022/solutions/day01_1.py %}
```

Simple enough. So far, I'm just copy-pasting the problem inputs into a folder; later, I will write a method on the `BaseSolution` class that handles auth (every user's input is different) and pulls the data from the AOC website.

```python
if __name__ == "__main__":
    from solutions.day01_1 import Solution

    with open("_includes/aoc2022/inputs/day01_both.txt") as fh:
        print(Solution.solve([fh.read()]))
```

# Second problem
Part two is locked until completing part one: spoilers from now on. You've been warned.

.

.

.

.

.

.

.

Now we must find the total calories carried by the *top three* elves. It is simple enough to just sort the list of calories in place and index the first three. No priority queues needed. Yet. (On the more data structure-heavy problems I will probably switch to Java, and on the more computationally-intensive or functional programming probems (if any) I will switch to Rust or maybe C++.)

```python
{% include aoc2022/solutions/day01_2.py %}
```

Ta-da!
![Day 1 victory](/assets/aoc2022/victory01.png)
